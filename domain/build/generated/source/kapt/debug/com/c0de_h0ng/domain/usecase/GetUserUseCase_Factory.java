// Generated by Dagger (https://dagger.dev).
package com.c0de_h0ng.domain.usecase;

import com.c0de_h0ng.domain.repository.GitHubRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetUserUseCase_Factory implements Factory<GetUserUseCase> {
  private final Provider<GitHubRepository> repositoryProvider;

  public GetUserUseCase_Factory(Provider<GitHubRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetUserUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetUserUseCase_Factory create(Provider<GitHubRepository> repositoryProvider) {
    return new GetUserUseCase_Factory(repositoryProvider);
  }

  public static GetUserUseCase newInstance(GitHubRepository repository) {
    return new GetUserUseCase(repository);
  }
}
