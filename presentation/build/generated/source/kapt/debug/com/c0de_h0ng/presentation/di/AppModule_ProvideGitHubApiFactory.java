// Generated by Dagger (https://dagger.dev).
package com.c0de_h0ng.presentation.di;

import com.c0de_h0ng.data.remote.GitHubApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideGitHubApiFactory implements Factory<GitHubApi> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  public AppModule_ProvideGitHubApiFactory(Provider<OkHttpClient> okHttpClientProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public GitHubApi get() {
    return provideGitHubApi(okHttpClientProvider.get());
  }

  public static AppModule_ProvideGitHubApiFactory create(
      Provider<OkHttpClient> okHttpClientProvider) {
    return new AppModule_ProvideGitHubApiFactory(okHttpClientProvider);
  }

  public static GitHubApi provideGitHubApi(OkHttpClient okHttpClient) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideGitHubApi(okHttpClient));
  }
}
