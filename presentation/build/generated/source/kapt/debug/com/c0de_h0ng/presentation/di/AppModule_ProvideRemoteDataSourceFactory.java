// Generated by Dagger (https://dagger.dev).
package com.c0de_h0ng.presentation.di;

import com.c0de_h0ng.data.datasource.RemoteDatSource;
import com.c0de_h0ng.data.remote.GitHubApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideRemoteDataSourceFactory implements Factory<RemoteDatSource> {
  private final Provider<GitHubApi> apiProvider;

  public AppModule_ProvideRemoteDataSourceFactory(Provider<GitHubApi> apiProvider) {
    this.apiProvider = apiProvider;
  }

  @Override
  public RemoteDatSource get() {
    return provideRemoteDataSource(apiProvider.get());
  }

  public static AppModule_ProvideRemoteDataSourceFactory create(Provider<GitHubApi> apiProvider) {
    return new AppModule_ProvideRemoteDataSourceFactory(apiProvider);
  }

  public static RemoteDatSource provideRemoteDataSource(GitHubApi api) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideRemoteDataSource(api));
  }
}
